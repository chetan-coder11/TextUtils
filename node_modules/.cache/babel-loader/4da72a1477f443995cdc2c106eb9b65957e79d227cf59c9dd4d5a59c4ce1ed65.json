{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\React Project\\\\textutils\\\\src\\\\components\\\\TextForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TextForm(props) {\n  _s();\n  const HandleUpClick = () => {\n    console.log(\"Uppercase was clicket\");\n  };\n  const HandleOnChange = () => {\n    console.log(\"On change\");\n  };\n  const [text, setText] = useState('Enter text here');\n  // text = \"new text\"; Wrong  way to change state\n  // setText = \"new text\"; Wrong  way to change state\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: props.heading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"form-control\",\n        value: text,\n        onChange: handleOnChange,\n        id: \"myBox\",\n        rows: \"8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: HandleUpClick,\n      children: \"Convert to Uppercase\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 1\n  }, this);\n}\n_s(TextForm, \"3SkFjrn2ucpyzrB0FJHiV9CSQT4=\");\n_c = TextForm;\nvar _c;\n$RefreshReg$(_c, \"TextForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TextForm","props","_s","HandleUpClick","console","log","HandleOnChange","text","setText","children","heading","fileName","_jsxFileName","lineNumber","columnNumber","className","value","onChange","handleOnChange","id","rows","onClick","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/React Project/textutils/src/components/TextForm.js"],"sourcesContent":["import React, {useState} from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const HandleUpClick = ()=>{\r\n        console.log(\"Uppercase was clicket\");\r\n    }\r\n    const HandleOnChange = ()=>{\r\n        console.log(\"On change\");\r\n    }\r\n    const [text, setText] = useState('Enter text here');\r\n    // text = \"new text\"; Wrong  way to change state\r\n    // setText = \"new text\"; Wrong  way to change state\r\n  return (\r\n<div>\r\n    <h1>{props.heading}</h1>\r\n<div className=\"mb-3\">\r\n<textarea className=\"form-control\" value={text} onChange={handleOnChange} id=\"myBox\" rows=\"8\"></textarea>\r\n</div>\r\n<button className=\"btn btn-primary\" onClick={HandleUpClick} >Convert to Uppercase</button>\r\n</div>\r\n  )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGrC,eAAe,SAASC,QAAQA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACpC,MAAMC,aAAa,GAAGA,CAAA,KAAI;IACtBC,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;EACxC,CAAC;EACD,MAAMC,cAAc,GAAGA,CAAA,KAAI;IACvBF,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;EAC5B,CAAC;EACD,MAAM,CAACE,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,iBAAiB,CAAC;EACnD;EACA;EACF,oBACFE,OAAA;IAAAU,QAAA,gBACIV,OAAA;MAAAU,QAAA,EAAKR,KAAK,CAACS;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC5Bf,OAAA;MAAKgB,SAAS,EAAC,MAAM;MAAAN,QAAA,eACrBV,OAAA;QAAUgB,SAAS,EAAC,cAAc;QAACC,KAAK,EAAET,IAAK;QAACU,QAAQ,EAAEC,cAAe;QAACC,EAAE,EAAC,OAAO;QAACC,IAAI,EAAC;MAAG;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAW;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpG,CAAC,eACNf,OAAA;MAAQgB,SAAS,EAAC,iBAAiB;MAACM,OAAO,EAAElB,aAAc;MAAAM,QAAA,EAAE;IAAoB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrF,CAAC;AAEN;AAACZ,EAAA,CAnBuBF,QAAQ;AAAAsB,EAAA,GAARtB,QAAQ;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}